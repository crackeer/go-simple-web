<template id="template">
    <p>
        <label class="radio-inline">
            <input type="radio" name="category" v-model="category" value="all" @change="selectClassify('all')">全部
        </label>
        <template v-for="(item, i) in categoryList">
            <label class="radio-inline">
                <input type="radio" name="category" :value="item" v-model="category"
                    @change="selectClassify(item)">{{item}}
            </label>
        </template>
        <a class="btn btn-outline-primary btn-sm mx-3" href="/markdown/create">
            创建 <i class="bi bi-forward"></i>
        </a>
    </p>


    <table class="table table-striped table-bordered table-condensed">
        <thead>
            <tr>
                <th>标题</th>
                <th>分类</th>
                <th>创建时间</th>
                <th>修改时间</th>
                <th style="text-align:center">操作</th>
            </tr>
        <tbody>
            <tr v-for="(item, i) in list">
                <td><a :href="'/markdown/detail?id=' + item.id">{{item.title}}</a></td>
                <td>{{item.category}}</td>
                <td>{{item.create_at}}</td>
                <td>{{item.modify_at}}</td>
                <td class="link-list" style="text-align: center;">
                    <a :href="'/markdown/edit?id=' + item.id" class="a-group">编辑</a>
                    <a href="javascript:;" @click="showDeleteModal(item)" class="a-group">删除</a>
                    <a href="javascript:;" @click="showShareModal(item)" class="a-group">分享</a>
                </td>
            </tr>
    </table>
</template>
<script>
    window.VueObject = {
        data() {
            return {
                category: '',
                categoryList: [],
                list: [],
            }
        },
        template: '#template',
        async mounted() {
            this.category = getQuery('category', 'all')
            this.getCategoryList()
            this.getList()
        },
        methods: {
            async getCategoryList() {
                let result = await axios.post('/api/database/distinct/default/content/category', {
                    where: {
                        content_type: 'markdown'
                    }
                })
                this.categoryList = result.data.data
            },
            async getList() {
                let where = {
                    content_type: 'markdown'
                }
                if (this.category.length > 0 && this.category != 'all') {
                    where['category'] = this.category
                }
                let result = await axios.post('/api/database/query/default/content', {
                    where: where,
                    page: 1,
                    page_size: 1000,
                })
                for(let i = 0;i < result.data.data.length; i++) {
                    result.data.data[i]['modify_at'] = formatUnix(result.data.data[i]['modify_at'])
                    result.data.data[i]['create_at'] = formatUnix(result.data.data[i]['create_at'])
                }

                this.list = result.data.data
            },
            async selectClassify(category) {
                windowReloadQuery({
                    category: category,
                })
            },
            showDeleteModal(item) {
                bootbox.confirm("确认删除`" + item.title + "`？", async (result) => {
                    if (!result) {
                        return
                    }
                    result = await axios.post('/api/database/single_delete/default/content/' + item.id)
                    if (result.data.code < 0) {
                        bootbox.alert(result.data.message)
                    } else {
                        bootbox.alert("删除成功", () => {
                            this.getList()
                        })
                    }
                })
            },
            async showShareModal(item) {
                bootbox.prompt({
                    title: "确认分享`" + item.title + "`？请选择时长",
                    inputType: 'select',
                    value: 90 * 24 * 3600,
                    inputOptions: [{
                        text: '1天',
                        value: 24 * 3600
                    },
                    {
                        text: '7天',
                        value: 7 * 24 * 3600
                    },
                    {
                        text: '90天',
                        value: 90 * 24 * 3600
                    },
                    {
                        text: '永久',
                        value: -1
                    }],
                    callback: (result) => {
                        if (result == null) return
                        this.doShareMarkdown(item.id, result)
                    }
                });
            },
            async doShareMarkdown(id, duration) {
                let result = await axios.post('/share/markdown/' + id, {
                    duration: parseInt(duration)
                })
                if (result.data.code < 0) {
                    bootbox.alert(result.data.message)
                } else {

                    bootbox.alert({
                        title: '分享成功',
                        message: '分享的链接为：<p><a href="' + result.data.data.link + '" target="_blank">' + window.location.host + result.data.data.link + '</a></p>'
                    })
                }
            },
        }
    }
</script>